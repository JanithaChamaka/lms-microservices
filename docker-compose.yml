version: '3.8'

services:
#    postgres:
#        image: postgres:16
#        volumes:
#        - postgres_data:/var/lib/postgresql/data
#        environment:
#          POSTGRES_DB: postgres
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#        restart: on-failure
  vault:
    image: vault:1.13.3
    container_name: vault
    hostname: vault
    ports:
      - 8200:8200
    volumes:
      - ./vault/config.hcl:/vault/config/config.hcl
      - vault-data:/vault/file/
    environment:
      - VAULT_ADDR=http://localhost:8200
    cap_add:
      - IPC_LOCK
    command: server
    restart: always
    networks:
      - lms-network

  vault-init:
    image: vault:1.13.3
    container_name: vault-init
    environment:
      - VAULT_ADDR=http://vault:8200
      - MY_VAULT_TOKEN=${MY_VAULT_TOKEN:-test}
    volumes:
      - ./vault/vault-root-token:/vault/file/vault-root-token
      - ./vault/vault-init.sh:/usr/local/bin/vault-init.sh
      - vault-data:/vault/file/
    command: >
      sh -c "chmod +x /usr/local/bin/vault-init.sh &&
             /usr/local/bin/vault-init.sh"
    restart: on-failure
    depends_on:
      - vault
    networks:
      - lms-network

#  zipkin-server:
#    image: openzipkin/zipkin:latest
#    container_name: zipkin-server
#    ports:
#      - 9411:9411
#    networks:
#      - lms-network
#    restart: always


#  user-service:
#    build:
#      context: ./user-service
#      dockerfile: Dockerfile
#    container_name: user-service
#    ports:
#      - 8081:8081
#    environment:
#      - VAULT_ADDR=http://vault:8200
#    volumes:
#      - vault-data:/vault/file/
#    networks:
#      - lms-network
#    depends_on:
#      - vault
#      - vault-init
#    restart: always

networks:
  lms-network:
    driver: bridge

volumes:
  vault-data: